# a = [1, 2, 3, 4, 5]  # список
# a[2:3] = []  # 3-ке присвоили пустоту9 3й индекс не учитывается
# print(a)
#
# b = [1, 2, 3, 4, 5, 6]
# c = tuple('sdfsdfd')
# print(c)
# s = tuple(tuple(b))  # тоже кортеж
# print(s)


# Дана строка, состоящая ровно из двух слов, разделенных пробелом.
# Переставьте эти слова местами. Результат запишите в строку и
# выведите получившуюся строку.
# Замените в этой строке все цифры 1 на слово one

s = input()

first_word = s[:s.find(' ')]
second_word = s[s.find(' ') + 1:]
k = second_word + ' ' + first_word
print(k)
print(k.replace('1', 'one'))

# Вывести таблицу умножения от 1 до 9
# for i in range(1, 10):
#     for j in range(1, 10):
#         print(i * j, ' ', end='')
#     print('')


# Сгенерировать список из 10 чисел. Диапазон чисел - 0, 9.
# Посчитайте, сколько в нем пар элементов, равных друг другу.
# Любые два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. При этом образованная пара не участвуют в формировании других пар.
# * Вывести цифру из списка '-' количество пар с этой цифрой.
# Например, [1, 1, 1, 1].
# 1 - 2
# Результат: 2 пары.
import random

a = [random.randint(0, 9) for i in range(10)]
print(a)
p = 0
for i in set(a):
    p += a.count(i) // 2
    print(i, '-', a.count(i) // 2)
print('Пар в списке: ', p)

# Даны два кортежа:
# A = (13, 5, 43, 49, 67, 32)
# B = (53, 21, 4, 23)
# Необходимо определить:
# 1) Сумма элементов какого из кортежей больше и вывести соответствующее сообщение на экран ( Сумма больше в кортеже - ..)
# 2) Вывести на экран порядковые номера минимальных элементов этих
# кортежей

A = (13, 5, 43, 49, 67, 32)
B = (53, 21, 4, 23)
s_A = sum(A)
s_B = sum(B)
if s_A > s_B:
    print("Сумма больше в кортеже - A")
else:
    print("Сумма больше в кортеже - B")

print('min A', min(A), 'Номер - ', A.index(min(A)) + 1)
print('min B', min(B), 'Номер - ', B.index(min(B)) + 1)

# Даны два списка одинаковой длины. Необходимо создать из них словарь таким образом, чтобы
# элементы первого списка были ключами, а элементы второго — соответственно значениями нашего словаря.
# вар 1
# import random
#
# a = [random.randint(0, 9) for i in range(10)]
# c = [random.randint(0, 9) for i in range(10)]
# print(a, c)
# f = dict(zip(a, c))
# print(f)

# вар 2
keys = ['red', 'green', 'blue']
values = ['#FF0000', '#008000', '#0000FF']
color_dictionary = dict(zip(keys, values))
print(color_dictionary)

# Даны два списка чисел. Посчитайте, сколько чисел
# содержится одновременно как в первом списке, так и во втором.

# вар1
# import random
#
# a = [random.randint(0, 9) for i in range(10)]
# c = [random.randint(0, 9) for i in range(10)]
# print(a, c)
# a = set(a)
# print(a)
# c = set(c)
# print(c)
# d = a & c
# print(d)
# d = list(d)
# print('повторение цифр:', d, len(d), '-раз')

# вар2
lst = [0, 0, 1, 2, 3, 4, 5, 5, 6, 7]
lst_1 = [0, 3, 4, 5, 6, 1, 2, 3, 4, 5, 8]
set_1 = set(lst)
set_2 = set(lst_1)

intersection = set_1 & set_2
print(intersection)
print(len(intersection))

# В текстовом файле посчитать количество строк, а
# также для каждой отдельной строки определить количество в ней символов.

with open('1.txt') as f:
    s = f.readlines()
print(s)
for i in s:
    i = i.replace('\n', '')
    print(i, 'кол-во символов в строке', len(i))
print('кол-во строк в файле: ', len(s))
